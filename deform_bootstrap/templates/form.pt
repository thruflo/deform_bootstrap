<form
  id="${field.formid}"
  class="deform ${field.bootstrap_form_style | ' '}
         ${field.css_class}"
  action="${field.action}"
  method="${field.method}"
  enctype="${field.enctype | 'application/x-www-form-urlencoded'}"
  accept-charset="utf-8"
  i18n:domain="deform"
  tal:define="inline getattr(field, 'bootstrap_form_style', None) == 'form-inline'"
  role="form">

  <!--fieldset-->
    <legend tal:condition="field.title">
      ${field.title}
    </legend>
    <input type="hidden" name="_charset_" />
    <input type="hidden" name="__formid__" value="${field.formid}"/>
    <div class="${ getattr(field, 'alert_class', '') }" tal:condition="field.error">
      <div class="alert alert-block alert-danger">
        <strong class="errorMsgLbl" i18n:translate="">
          There was a problem with your submission
        </strong>
        <br />
        <span class="errorMsg" i18n:translate="">
          Errors have been highlighted below
        </span>
        <p class="errorMsg">${field.errormsg}</p>
      </div>
    </div>
    <div tal:define="rndr field.renderer;
                    tmpl field.widget.item_template"
        tal:repeat="f field.children"
        tal:replace="structure
                     rndr(tmpl,field=f,cstruct=cstruct.get(f.name, null))"
    />
    <div tal:condition="field.buttons" tal:omit-tag="inline" class="form-actions ${ getattr(field, 'actions_class', '') }">
      <tal:block repeat="button field.buttons">
        <input
            tal:attributes="disabled button.disabled"
            id="${field.formid+button.name}"
            name="${button.name}"
            type="${button.type}"
            class="btn ${repeat.button.start and 'btn-primary' or ''}"
            value="${button.title}"
        />
      </tal:block>
    </div>
  <!--/fieldset-->
  <script type="text/javascript" tal:condition="field.use_ajax">
    deform.addCallback(
       '${field.formid}',
       function(oid) {
         var options = {
           target: '#' + oid,
           replaceTarget: true,
           success: function() {
             deform.processCallbacks();
             deform.focusFirstInput();
           }
         };
         var extra_options = ${field.ajax_options} || {};
         $('#' + oid).ajaxForm($.extend(options, extra_options));
       }
    );
  </script>
</form>
